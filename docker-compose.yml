version: '3.1'
networks:
  app_network:
services:
  nginx:
    image: nginx:stable-alpine
    container_name: test-task-one.nginx
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      -   app_network
  php:
    build:
      context: ./
      dockerfile: ./.docker/Dockerfile
    container_name: test-task-one
    volumes:
      - .:/var/www/html
    ports:
      - "9001:9001"
    networks:
      -   app_network
  composer:
    image: composer:latest
    container_name: test-task-one.composer
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      -   app_network
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: test-task-one.mysql
    restart: always
    ports:
      - "3308:3306"
    env_file:
      - ".env"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
  cache:
      image: redis:6.2-alpine
      container_name: test-task-one.redis
      restart: always
      ports:
          - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      volumes:
          - cache:/data
volumes:
  db_data: {}
  cache:
      driver: local
